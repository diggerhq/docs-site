(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{372:function(e,n,s){"use strict";s.r(n);var t=s(45),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"ci-cd-integrations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd-integrations"}},[e._v("#")]),e._v(" CI/CD Integrations")]),e._v(" "),s("p",[e._v("You can use digger CLI within your CI/CD pipeline within your favourite tools such as Github Actions, CircliCI or TravicCI. Digger CLI "),s("code",[e._v("dg")]),e._v(" can easily be used within your CI system to support your releasing. All you need is your digger token and AWS keys and then you can follow the system of your choise")]),e._v(" "),s("h2",{attrs:{id:"github-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[e._v("#")]),e._v(" Github Actions")]),e._v(" "),s("p",[e._v("In the snippet bellow we show an example of a github action which will release your service "),s("code",[e._v("svc1")]),e._v(" on push. You can see a full GH workflow example in our "),s("a",{attrs:{href:"https://github.com/diggerhq/django-todolist/blob/master/.github/workflows/deploy.yml",target:"_blank",rel:"noopener noreferrer"}},[e._v("TODO example repository"),s("OutboundLink")],1)]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('name: Digger CI\non:\n  push:\n    branches: [master]\n\n\n  build-push-release:\n    runs-on: ubuntu-16.04\n    needs:\n      - get_tag_version\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v1\n\n    - name: Configure AWS credentials\n      uses: aws-actions/configure-aws-credentials@v1\n      with:\n        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n        aws-region: eu-west-1\n\n    - name: Set up Python 3.8\n      uses: actions/setup-python@v2\n      with:\n        python-version: \'3.8\'\n\n    - name: Build and push and release\n      env:\n        DIGGER_TOKEN: ${{ secrets.DIGGER_TOKEN }}\n        DIGGER_AWS_KEY: ${{ secrets.DIGGER_AWS_KEY }}\n        DIGGER_AWS_SECRET: ${{ secrets.DIGGER_AWS_SECRET }}\n        BACKEND_ENDPOINT: "https://backend.digger.dev"\n        WEBAPP_ENDPOINT: "https://app.digger.dev"\n      run: |\n        export TAG_VERSION=${{needs.get_tag_version.outputs.tag_version}} \n\n        # Install diggercli\n        pip install --upgrade git+https://github.com/diggerhq/cli@master\n\n        echo "> Building docker image"\n        dg env build stage --service svc1\n        echo "> Pushing docker image to ECR"    \n        dg env push stage --service svc1 --aws-key "$DIGGER_AWS_KEY" --aws-secret "$DIGGER_AWS_SECRET"\n        echo "> Releasing"    \n        dg env push release --service svc1 --aws-key "$DIGGER_AWS_KEY" --aws-secret "$DIGGER_AWS_SECRET"\n\n')])])]),s("h2",{attrs:{id:"gitlab-ci"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci"}},[e._v("#")]),e._v(" Gitlab CI")]),e._v(" "),s("p",[e._v("In the snippet bellow we show an example of a gitlab ci. We are using the offical docker image of digger to run digger commands. This comes with all dg dependencies included in the image")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('default:\n  image: public.ecr.aws/g1x6q1x1/dg:v0.2.17\n\n\nvariables:\n  # You need to configure the following variables as gitlab secrets\n  # DIGGER_TOKEN: ${{DIGGER_TOKEN}}\n  # DIGGER_AWS_KEY: ${{ secrets.DIGGER_AWS_KEY }}\n  # DIGGER_AWS_SECRET: ${{ secrets.DIGGER_AWS_SECRET }}\n  BACKEND_ENDPOINT: "https://backend.digger.dev"\n  WEBAPP_ENDPOINT: "https://app.digger.dev"\n  SERVICE: platform\n  TAG_VERSION: $CI_COMMIT_SHORT_SHA\n  # settings for docker-in-docker\n  DOCKER_HOST: tcp://docker:2376\n  DOCKER_TLS_CERTDIR: "/certs"\n  DOCKER_TLS_VERIFY: 1\n  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"\n  \n# This is needed to allow docker-in-docker\nservices:\n  - docker:19.03.12-dind\n\nrelease-staging:\n  stage: build\n  variables:\n    # This is the name of your environment\n    DG_ENV: "staging" \n  only:\n    - develop\n  script:\n    - echo "> Building docker image"\n    - dg env build "$DG_ENV" --service $SERVICE --tag $TAG_VERSION --context .\n    - echo "> Pushing docker image to ECR"\n    - dg env push "$DG_ENV" --service $SERVICE --tag $TAG_VERSION --aws-key "$DIGGER_AWS_KEY" --aws-secret "$DIGGER_AWS_SECRET"\n    - echo "> Releasing docker image"\n    - dg env release "$DG_ENV" --service $SERVICE --tag $TAG_VERSION --aws-key "$DIGGER_AWS_KEY" --aws-secret "$DIGGER_AWS_SECRET"\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);